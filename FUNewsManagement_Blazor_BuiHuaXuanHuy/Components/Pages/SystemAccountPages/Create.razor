@page "/systemaccounts/create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc
@using BO
@using Repo
@inject IUnitOfWork UnitOfWork
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "0")]
@attribute [IgnoreAntiforgeryToken]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>SystemAccount</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="SystemAccount" OnValidSubmit="AddSystemAccount" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="accountname" class="form-label">AccountName:</label>
                <InputText id="accountname" @bind-Value="SystemAccount.AccountName" class="form-control" />
                <ValidationMessage For="() => SystemAccount.AccountName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="accountemail" class="form-label">AccountEmail:</label>
                <InputText id="accountemail" @bind-Value="SystemAccount.AccountEmail" class="form-control" />
                <ValidationMessage For="() => SystemAccount.AccountEmail" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="accountrole" class="form-label">AccountRole:</label>
                <InputNumber id="accountrole" @bind-Value="SystemAccount.AccountRole" class="form-control" />
                <ValidationMessage For="() => SystemAccount.AccountRole" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="accountpassword" class="form-label">AccountPassword:</label>
                <InputText id="accountpassword" @bind-Value="SystemAccount.AccountPassword" class="form-control" />
                <ValidationMessage For="() => SystemAccount.AccountPassword" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/systemaccounts">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private SystemAccountDto SystemAccount { get; set; } = new();

    private async Task AddSystemAccount()
    {
        var repository = UnitOfWork.GetRepository<SystemAccount>();
        var listAccount = await repository.GetAllAsync();

        // Calculate the new AccountId
        int newId = listAccount.Select(a => a.AccountId).Max() + 1;
        SystemAccount.AccountId = (short)newId;

        var newAccount = new SystemAccount
            {
                AccountId = SystemAccount.AccountId,
                AccountName = SystemAccount.AccountName,
                AccountEmail = SystemAccount.AccountEmail,
                AccountRole = SystemAccount.AccountRole,
                AccountPassword = SystemAccount.AccountPassword
            };

        await repository.InsertAsync(newAccount);
        await UnitOfWork.SaveAsync(); // Commit changes to the database
        NavigationManager.NavigateTo("/systemaccounts");
    }

    public class SystemAccountDto
    {
        public short AccountId { get; set; }
        public string AccountName { get; set; }
        public string AccountEmail { get; set; }
        public int? AccountRole { get; set; }
        public string AccountPassword { get; set; }
    }
}
